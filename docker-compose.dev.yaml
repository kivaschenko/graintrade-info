name: graintraide-dev
services:
  db:
    image: postgis/postgis:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: dev_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  pgadmin4:
    image: elestio/pgadmin:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@example.com
      PGADMIN_DEFAULT_PASSWORD: dev_password
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "5050:8080"
    depends_on:
      db:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: dev_user
      RABBITMQ_DEFAULT_PASS: dev_password
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7.4-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  backend:
    build: ./backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    environment:
      - APP_ENV=development
      - DATABASE_URL=postgresql://admin:dev_password@db:5432/postgres
      - RABBITMQ_URL=amqp://dev_user:dev_password@rabbitmq:5672/
      - RABBITMQ_VHOST=/
      - JWT_SECRET=dev_secret
      - JWT_EXPIRES_IN=3600
      - ALGORITHM=HS256
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notifications:
    build: ./notifications
    restart: always
    ports:
      - "8001:8000"
    volumes:
      - ./notifications:/app
    environment:
      - APP_ENV=development
      - DATABASE_URL=postgresql://admin:dev_password@db:5432/postgres
      - RABBITMQ_URL=amqp://dev_user:dev_password@rabbitmq:5672/
      - RABBITMQ_VHOST=/
      - JWT_SECRET=dev_secret
      - JWT_EXPIRES_IN=3600
      - ALGORITHM=HS256
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
    depends_on:
      - db
      - rabbitmq
      - backend
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # frontend:
  #   build: 
  #     context: ./frontend
  #   restart: always
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./frontend:/frontend
  #   environment:
  #     - NODE_ENV=development
  #     - VUE_APP_API_URL=http://localhost:8000
  #     - VUE_APP_NOTIFICATIONS_URL=http://localhost:8001
  #     - VUE_APP_RABBITMQ_URL=amqp://dev_user:dev_password@rabbitmq:5672/
  #     - VUE_APP_RABBITMQ_VHOST=/
  #     - VUE_APP_MAPBOX_TOKEN=pk.eyJ1Ijoia2l2YXNjaGVua28iLCJhIjoiY20zb2l1bTl4MDRrazJscXRxZ3YwMXdycyJ9.S915p8_E1L5u8yB3dypUpw
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
  redis_data: