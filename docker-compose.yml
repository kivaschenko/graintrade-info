version: '3.9'

services:
  db:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: test_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '172.17.0.1:5432:5432'
    healthcheck:
      test: CMD-SHELL ["executable", "arg"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  db_init:
    image: postgis/postgis:16-3.4-alpine
    volumes:
      - ./shared-libs/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: test_password
    depends_on:
      - db
    command: ["psql", "-U", "admin", "-d", "postgres", "-f", "/docker-entrypoint-initdb.d/schema.sql"]

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@email.com
      PGADMIN_DEFAULT_PASSWORD: test_password
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "172.17.0.1:8080:8080"
    volumes:
      - postgis:/var/lib/pgadmin4/servers.json

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - type: bind
        source: ./auth-service
        target: /app
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres

  item-service:
    build:
      context: .
      dockerfile: ./item-service/Dockerfile
    ports:
      - "8002:8000"
    volumes:
      - type: bind
        source: ./item-service
        target: /app
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres
  

volumes:
  postgres_data:
  postgis: