name: graintrade
services:
  db:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: test_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: CMD-SHELL ["executable", "arg"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@email.com
      PGADMIN_DEFAULT_PASSWORD: test_password
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "5050:8080"
    volumes:
      - postgis:/var/lib/pgadmin4/servers.json
    depends_on:
      db:
        condition: service_started

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  
  auth-service:
    build: ./auth-service
    ports:
      - "8001:8000"
    volumes:
      - ./auth-service:/app
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres

  item-service:
    build: ./item-service
    ports:
      - "8002:8000"
    volumes:
      - ./item-service:/app
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres
  
  notification-service:
    build: ./notification-service
    ports:
      - "8004:8000"
    volumes:
      - ./notification-service:/app
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres

  subscription-service:
    build: ./subscription-service
    ports:
      - "8003:8000"
    volumes:
      - ./subscription-service:/app
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres

volumes:
  postgres_data:
  postgis:
  kafka_data:
