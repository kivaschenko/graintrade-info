name: graintraide
services:
  db:
    image: postgis/postgis:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: test_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: CMD-SHELL ["executable", "arg"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@email.com
      PGADMIN_DEFAULT_PASSWORD: test_password
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "5050:8080"
    volumes:
      - postgis:/var/lib/pgadmin4/servers.json
    depends_on:
      db:
        condition: service_started

  app-service:
    build: ./app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    depends_on:
      db:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres
  
  notification-service:
    build: ./notification-service
    ports:
      - "8001:8000"
    volumes:
      - ./notification-service:/app
    depends_on:
      db:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres

  subscription-service:
    build: ./subscription-service
    ports:
      - "8002:8000"
    volumes:
      - ./subscription-service:/app
    depends_on:
      db:
        condition: service_started
      # kafka:
      #   condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://admin:test_password@db/postgres
    # networks:
    #   - graintraide-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres_data:
  postgis:
